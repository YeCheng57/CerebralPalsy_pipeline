configfile: "config.json"
include: "precalling.conf"

ind=config['data']
outd=config['output']
genome=config["reference"]["genome"]
dbsnp=config["reference"]["db138"]
G1k=config["reference"]["g1k"]
m1kg=config["reference"]["m1kg"]
v6=config["reference"]["V6"]
ex_dir=config["ex_dir"]
samtools=config["software"]["samtools"]

SAMPLES_bam, =glob_wildcards(outd+"/bam/{sample}.sorted.markdup.bam")
SAMPLES_fastp, =glob_wildcards(outd+"/"+config['fq_trim_dir']+"/{sample}"+config["fq1_trim_suffix"])
SAMPLES_raw, =glob_wildcards(ind+"/{sample}"+config["fq1_suffix"])
SAMPLES=set(SAMPLES_bam+SAMPLES_fastp+SAMPLES_raw)
rule EX_done:
	input:
		outd+"/"+ex_dir+"/EX_prepare.txt"
rule make_bamlist:
	input:
		list=expand(outd+"/bam/{sample}.sorted.markdup.bam", sample=SAMPLES)
	output:
		pretxt=outd+"/"+ex_dir+"/EX_prepare.txt",
		anatxt=outd+"/"+ex_dir+"/EX_analysis.txt"
	params:
		dir=outd+"/"+ex_dir
	shell:
		"""
		for ele in {input.list};do
		s=`echo $ele|awk -F "." '{{print $1}}'|awk -F "/" '{{print $NF}}'`
		echo $ele {params.dir} $s>> {output.pretxt}
		done
		"""
rule EX_Pre:
	input:
		rules.make_bamlist.output.pretxt
	
