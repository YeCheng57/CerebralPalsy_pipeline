configfile: "config.json"
include: "precalling.conf"

ind=config['data']
outd=config['output']
genome=config["reference"]["genome"]
dbsnp=config["reference"]["db138"]
G1k=config["reference"]["g1k"]
m1kg=config["reference"]["m1kg"]
v6=config["reference"]["V6"]

bwa=config["software"]["bwa"]
samtools=config["software"]["samtools"]
gatk=config["software"]["gatk"]

SAMPLES_bam, =glob_wildcards(outd+"/bam/{sample}.sorted.markdup.bam")
SAMPLES_fastp, =glob_wildcards(outd+"/"+config['fq_trim_dir']+"/{sample}"+config["fq1_trim_suffix"])
SAMPLES_raw, =glob_wildcards(ind+"/{sample}"+config["fq1_suffix"])
SAMPLES=set(SAMPLES_bam+SAMPLES_fastp+SAMPLES_raw)
#SAMPLES=SAMPLES_raw
rule gatk_single_done:
	input:
		expand(outd+"/vcf/{sample}"+config["single_gvcf_suffix"],sample=SAMPLES)
	output:
		touch(outd+"/gatk.single.sample.done")
rule gatk_BaseRecalibrator:
	input:
		bam=rules.gatk_markdup.output.bam,
	output:
		outd+"/bam/recal_{sample}WES.table"
	log:
		outd+"/logs/gatk_baserecalibrator/{sample}.log"
	benchmark:
		outd+"/benchmarks/{sample}.gatk_baserecalibrator.txt"
	threads:
		config["params"]["gatk"]["baserecalibrator_threads"]
	shell:
		"""
		({gatk} BaseRecalibrator --java-options '-Xmx20G -XX:+UseParallelGC \
                -XX:ParallelGCThreads={threads}'\
                -R {genome} \
                -I {input.bam} \
                -O {output} \
                --known-sites {dbsnp} \
                --known-sites {G1k} \
                --known-sites {m1kg}) 2> {log}
		"""
rule gatk_ApplyBQSR:
	input:
		bam=rules.gatk_markdup.output.bam,
		table=rules.gatk_BaseRecalibrator.output,
	output:
		outd+"/bam/{sample}.sorted.markdup.BQSR.bam"
	log:
		outd+"/logs/gatk_applyBQSR/{sample}.log"
	benchmark:
		outd+"/benchmarks/{sample}.gatk_applyBQSR.txt"
	threads:
		config["params"]["gatk"]["applybqsr_threads"]
	shell:
		"""
	        ({gatk} ApplyBQSR --java-options '-Xmx20G -XX:+UseParallelGC \
                -XX:ParallelGCThreads={threads}' \
                --bqsr-recal-file {input.table} \
                -R {genome} \
                -I {input.bam} \
                -O {output}) 2>{log}
		rm -rf {outd}/bam/{wildcards.sample}.sorted.markdup.bam
		"""
rule gatk_hc:
	input:
		bam=rules.gatk_ApplyBQSR.output,
	output:
		outd+"/vcf/{sample}"+config["single_gvcf_suffix"]
	threads:
		config["params"]["gatk"]["hc_threads"]
	log:
		outd+"/logs/gatk_hc/{sample}.log"
	benchmark:
		outd+"/benchmarks/{sample}.gatk_hc.log"
	shell:
		"""
	        (gatk HaplotypeCaller --java-options '-Xmx20G -XX:+UseParallelGC \
                -XX:ParallelGCThreads={threads}' \
                -I {input.bam} \
                -O {output} \
                -R {genome} \
                -D {dbsnp} \
                -L {v6} \
                --interval-padding 100 \
                -ERC GVCF \
                -G StandardAnnotation \
                -G StandardHCAnnotation \
                --native-pair-hmm-threads {threads} \
                -stand-call-conf 10) 2>{log}
		"""
